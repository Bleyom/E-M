(defwidget outer-window []
    (box))
(defwidget line []
    (box))
(defwidget profile []
    (box :orientation "h"
         :space-evenly "true"

        (box :class "pfp")
        (box :class "text" :orientation "v"
             :space-evenly "true"

            (box :class "welcome" "welcome!")
            (box :class "username" "Sir Bleyom")
        )
    )
)
(defwidget music-player []
    (box :class "music-player"
         :orientation "h"
        (box :class "song-art" :style "background-image: url('${art}')" :tooltip "${song_artist} - ${song_title_full}" song_art)
        (box :class "song-info" :orientation "v"
            (label :class "song-title" :text song_title)
            (box :class "song-artist" song_artist)
            (box :class "song-controls" :orientation "h"
                (button :onclick "playerctl previous" "")
                (button :class "play-pause" :onclick "playerctl play-pause" "")
                (button :onclick "playerctl next" "")
            )
        )
    )
)
;;  DATE VARS
(defpoll minute :interval "10s"
    "date '+%M'")
(defpoll hour :interval "5m"
    "date '+%H'")
(defpoll weekday :interval "5s"
    "date '+%A'")

;;  SYSTEM INFO VARS
(defpoll used_ram :interval "2s"
    "./scripts/getUsedRam")
(defpoll volume :interval "1ms"
    "amixer -D pulse sget Master | grep 'Left:' | awk -F'[][]' '{ print $2 }' | tr -d '%'")
(defpoll brightness :interval "1ms"
    "brightnessctl -m -d intel_backlight | awk -F, '{print substr($4, 0, length($4)-1)}' | tr -d '%'")

;; MUSIC PLAYER VARS
(defpoll art :interval "5s"
    "./scripts/echoSongArt")
(defpoll song_art :interval "5s"
    "./scripts/getSongArt")
(defpoll song_artist :interval "2s"
    "./scripts/getSongArtist")
(defpoll song_title :interval "2s"
    "./scripts/getSongTitle")
(defpoll song_title_full :interval "2s"
    "./scripts/getSongTitle full")
(defpoll player_status :interval "1s"
    "./scripts/getPlayerStatus")

;; LOCK SCREEN VARS
(defpoll username :interval "1s"
    "whoami")
(defpoll hostname :interval "1s"
    "hostname")

(defwindow outer-window
:geometry (geometry :x "1%"
                    :y "55px"
                    :width "350px"
                    :height "325px")
    (outer-window))
(defwindow profile
    :geometry (geometry :x "2%"
                        :y "240px"
                        :width "320px"
                        :height "120px")
    (profile))
(defwindow line
    :geometry (geometry :x "1%"
                        :y "33%"
                        :width "310px"
                        :height "2px")
    (line))
(defwindow music-player
    :geometry (geometry :x "2%"
                        :y "10%"
                        :width "320px"
                        :height "130px")
    (music-player))
